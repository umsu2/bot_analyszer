// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_service.proto

/*
Package grpc_service is a generated protocol buffer package.

It is generated from these files:
	grpc_service.proto

It has these top-level messages:
	WebRequest
	GeneralResponse
*/
package grpc_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type WebRequest struct {
	RemoteIPAddress string                     `protobuf:"bytes,1,opt,name=RemoteIPAddress" json:"RemoteIPAddress,omitempty"`
	TargetHost      string                     `protobuf:"bytes,2,opt,name=TargetHost" json:"TargetHost,omitempty"`
	UrlPath         string                     `protobuf:"bytes,3,opt,name=UrlPath" json:"UrlPath,omitempty"`
	UrlParams       string                     `protobuf:"bytes,4,opt,name=UrlParams" json:"UrlParams,omitempty"`
	UrlMethod       string                     `protobuf:"bytes,5,opt,name=UrlMethod" json:"UrlMethod,omitempty"`
	Headers         map[string]string          `protobuf:"bytes,6,rep,name=Headers" json:"Headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body            *google_protobuf1.Any      `protobuf:"bytes,7,opt,name=Body" json:"Body,omitempty"`
	Raw             []byte                     `protobuf:"bytes,8,opt,name=Raw,proto3" json:"Raw,omitempty"`
	Time            *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=time" json:"time,omitempty"`
}

func (m *WebRequest) Reset()                    { *m = WebRequest{} }
func (m *WebRequest) String() string            { return proto.CompactTextString(m) }
func (*WebRequest) ProtoMessage()               {}
func (*WebRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WebRequest) GetRemoteIPAddress() string {
	if m != nil {
		return m.RemoteIPAddress
	}
	return ""
}

func (m *WebRequest) GetTargetHost() string {
	if m != nil {
		return m.TargetHost
	}
	return ""
}

func (m *WebRequest) GetUrlPath() string {
	if m != nil {
		return m.UrlPath
	}
	return ""
}

func (m *WebRequest) GetUrlParams() string {
	if m != nil {
		return m.UrlParams
	}
	return ""
}

func (m *WebRequest) GetUrlMethod() string {
	if m != nil {
		return m.UrlMethod
	}
	return ""
}

func (m *WebRequest) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *WebRequest) GetBody() *google_protobuf1.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *WebRequest) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

func (m *WebRequest) GetTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

// The response message containing the greetings
type GeneralResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *GeneralResponse) Reset()                    { *m = GeneralResponse{} }
func (m *GeneralResponse) String() string            { return proto.CompactTextString(m) }
func (*GeneralResponse) ProtoMessage()               {}
func (*GeneralResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GeneralResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*WebRequest)(nil), "grpc_service.WebRequest")
	proto.RegisterType((*GeneralResponse)(nil), "grpc_service.GeneralResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for WebRequestService service

type WebRequestServiceClient interface {
	// Sends a greeting
	Anaylse(ctx context.Context, in *WebRequest, opts ...grpc.CallOption) (*GeneralResponse, error)
}

type webRequestServiceClient struct {
	cc *grpc.ClientConn
}

func NewWebRequestServiceClient(cc *grpc.ClientConn) WebRequestServiceClient {
	return &webRequestServiceClient{cc}
}

func (c *webRequestServiceClient) Anaylse(ctx context.Context, in *WebRequest, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := grpc.Invoke(ctx, "/grpc_service.WebRequestService/Anaylse", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WebRequestService service

type WebRequestServiceServer interface {
	// Sends a greeting
	Anaylse(context.Context, *WebRequest) (*GeneralResponse, error)
}

func RegisterWebRequestServiceServer(s *grpc.Server, srv WebRequestServiceServer) {
	s.RegisterService(&_WebRequestService_serviceDesc, srv)
}

func _WebRequestService_Anaylse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestServiceServer).Anaylse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_service.WebRequestService/Anaylse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestServiceServer).Anaylse(ctx, req.(*WebRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebRequestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_service.WebRequestService",
	HandlerType: (*WebRequestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Anaylse",
			Handler:    _WebRequestService_Anaylse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc_service.proto",
}

func init() { proto.RegisterFile("grpc_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x5b, 0x8b, 0x9b, 0x40,
	0x14, 0xc7, 0x6b, 0x4c, 0x62, 0x72, 0x12, 0x48, 0x3b, 0xe4, 0x61, 0x2a, 0xbd, 0x48, 0xa0, 0x20,
	0x14, 0x0c, 0xa4, 0x2f, 0x25, 0x2f, 0x25, 0xa5, 0xa5, 0xe9, 0x43, 0x21, 0x4c, 0x53, 0x4a, 0x9f,
	0xca, 0x44, 0x4f, 0x4d, 0xa8, 0x3a, 0xee, 0xcc, 0x98, 0xc5, 0x0f, 0xb2, 0xdf, 0x77, 0x71, 0xd4,
	0xcd, 0x65, 0xd9, 0xb7, 0x73, 0xfe, 0x17, 0xf5, 0xfc, 0x04, 0x12, 0xcb, 0x3c, 0xfc, 0xab, 0x50,
	0x1e, 0x0f, 0x21, 0x06, 0xb9, 0x14, 0x5a, 0x90, 0xf1, 0xb9, 0xe6, 0xbe, 0x8d, 0x85, 0x88, 0x13,
	0x9c, 0x1b, 0x6f, 0x57, 0xfc, 0x9b, 0xeb, 0x43, 0x8a, 0x4a, 0xf3, 0x34, 0xaf, 0xe3, 0xee, 0xcb,
	0xeb, 0x00, 0xcf, 0xca, 0xda, 0x9a, 0xdd, 0xd9, 0x00, 0xbf, 0x71, 0xc7, 0xf0, 0xa6, 0x40, 0xa5,
	0x89, 0x0f, 0x13, 0x86, 0xa9, 0xd0, 0xf8, 0x7d, 0xb3, 0x8a, 0x22, 0x89, 0x4a, 0x51, 0xcb, 0xb3,
	0xfc, 0x21, 0xbb, 0x96, 0xc9, 0x1b, 0x80, 0x2d, 0x97, 0x31, 0xea, 0xb5, 0x50, 0x9a, 0x76, 0x4c,
	0xe8, 0x4c, 0x21, 0x14, 0x9c, 0x5f, 0x32, 0xd9, 0x70, 0xbd, 0xa7, 0xb6, 0x31, 0xdb, 0x95, 0xbc,
	0x82, 0xa1, 0x19, 0x25, 0x4f, 0x15, 0xed, 0x1a, 0xef, 0x24, 0x34, 0xee, 0x0f, 0xd4, 0x7b, 0x11,
	0xd1, 0xde, 0x83, 0x5b, 0x0b, 0xe4, 0x13, 0x38, 0x6b, 0xe4, 0x11, 0x4a, 0x45, 0xfb, 0x9e, 0xed,
	0x8f, 0x16, 0xef, 0x82, 0x0b, 0x3c, 0xa7, 0x53, 0x82, 0x26, 0xf7, 0x35, 0xd3, 0xb2, 0x64, 0x6d,
	0x8b, 0xf8, 0xd0, 0xfd, 0x2c, 0xa2, 0x92, 0x3a, 0x9e, 0xe5, 0x8f, 0x16, 0xd3, 0xa0, 0x26, 0x13,
	0xb4, 0x64, 0x82, 0x55, 0x56, 0x32, 0x93, 0x20, 0xcf, 0xc1, 0x66, 0xfc, 0x96, 0x0e, 0x3c, 0xcb,
	0x1f, 0xb3, 0x6a, 0x24, 0x01, 0x74, 0x2b, 0xb2, 0x74, 0x68, 0xba, 0xee, 0xa3, 0xee, 0xb6, 0xc5,
	0xce, 0x4c, 0xce, 0x5d, 0xc2, 0xf8, 0xfc, 0x23, 0xaa, 0x27, 0xfe, 0xc7, 0xb2, 0x01, 0x5a, 0x8d,
	0x64, 0x0a, 0xbd, 0x23, 0x4f, 0x0a, 0x6c, 0xf8, 0xd5, 0xcb, 0xb2, 0xf3, 0xd1, 0x9a, 0xbd, 0x87,
	0xc9, 0x37, 0xcc, 0x50, 0xf2, 0x84, 0xa1, 0xca, 0x45, 0xa6, 0xb0, 0x22, 0xaa, 0x8a, 0x30, 0x6c,
	0xff, 0xc9, 0x80, 0xb5, 0xeb, 0xe2, 0x0f, 0xbc, 0x38, 0x1d, 0xfe, 0xb3, 0x46, 0x41, 0xbe, 0x80,
	0xb3, 0xca, 0x78, 0x99, 0x54, 0xcd, 0xa7, 0x20, 0xb9, 0xaf, 0x2f, 0x9d, 0xab, 0x57, 0xce, 0x9e,
	0xed, 0xfa, 0xe6, 0xba, 0x0f, 0xf7, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf2, 0xca, 0xbc, 0x21, 0x86,
	0x02, 0x00, 0x00,
}
